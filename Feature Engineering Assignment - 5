
Q1. Pearson correlation coefficient is a measure of the linear relationship between two variables. Suppose you have collected data on the amount of time students spend studying for an exam and their final exam scores. Calculate the Pearson correlation coefficient between these two variables and interpret the result.
data={'time':[2,3,4,5,6],
      'marks':[80,85,70,90,94]}
import pandas as pd
df = pd.DataFrame(data,columns=['time','marks'])
df
time	marks
0	2	80
1	3	85
2	4	70
3	5	90
4	6	94
df.corr('pearson')
time	marks
time	1.000000	0.558761
marks	0.558761	1.000000
Q2. Spearman's rank correlation is a measure of the monotonic relationship between two variables. Suppose you have collected data on the amount of sleep individuals get each night and their overall job satisfaction level on a scale of 1 to 10. Calculate the Spearman's rank correlation between these two variables and interpret the result.

data={'sleep':[4,5,6,7],
      'job':[5,7,6,10]}
import pandas as pd
df = pd.DataFrame(data,columns=['sleep','job'])
df
sleep	job
0	4	5
1	5	7
2	6	6
3	7	10
df.corr('spearman')
sleep	job
sleep	1.0	0.8
job	0.8	1.0
Q3. Suppose you are conducting a study to examine the relationship between the number of hours of exercise per week and body mass index (BMI) in a sample of adults. You collected data on both variables for 50 participants. Calculate the Pearson correlation coefficient and the Spearman's rank correlation between these two variables and compare the results.

data ={'exe_hour':[1,2,1,3,1,1,1,1,1,1,1,1,2,3,2,2,2,2,1,2,1,2,3,1,1,2,2,1,3,2,1,1,1,1,2,1,1,1,2,2,2,2,2,2,2,1,1,2,1,2],
        'bmi':[19,20,23,19,23,22,21,20,23,21,20,19,18,17,20,17,20,19,23,18,20,21,23,22,20,19,18,17,20,21,22,22,21,20,20,20,21,19,20,19,18,17,20,21,22,22,21,22,23,20]}
l1=[1,2,1,3,1,1,1,1,1,1,1,1,2,3,2,2,2,2,1,2,1,2,3,1,1,2,2,1,3,2,1,1,1,1,2,1,1,1,2,2,2,2,2,2,2,1,1,2,1,2]
len(l1)
50
df = pd.DataFrame(data)
df.head()
exe_hour	bmi
0	1	19
1	2	20
2	1	23
3	3	19
4	1	23
df.corr('pearson')
exe_hour	bmi
exe_hour	1.000000	-0.360457
bmi	-0.360457	1.000000
df.corr('spearman')
exe_hour	bmi
exe_hour	1.000000	-0.390555
bmi	-0.390555	1.000000
Q4. A researcher is interested in examining the relationship between the number of hours individuals spend watching television per day and their level of physical activity. The researcher collected data on both variables from a sample of 50 participants. Calculate the Pearson correlation coefficient between these two variables.

import numpy as np
a1=np.random.randint(1,5,50)
a2=np.random.randint(1,10,50)
data = {'w':a1,'f':a2}
df = pd.DataFrame(data,columns=['w','f'])
df.head()
w	f
0	4	5
1	1	4
2	2	9
3	2	9
4	3	9
df.corr('pearson')
w	f
w	1.000000	0.084411
f	0.084411	1.000000
Q5. A survey was conducted to examine the relationship between age and preference for a particular brand of soft drink. The survey results are shown below:

age = [25,42,37,19,31,28]
com =['coke','pepsi','mountain dew','coke','pepsi','coke']
data={'age':age,'com':com}
df = pd.DataFrame(data)
df.head()
age	com
0	25	coke
1	42	pepsi
2	37	mountain dew
3	19	coke
4	31	pepsi
df.cov()
/tmp/ipykernel_140/1545644723.py:1: FutureWarning: The default value of numeric_only in DataFrame.cov is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  df.cov()
age
age	68.666667
